<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd">

<!-- 引入外部文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
<!-- 配置c3p0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

<!-- 配置业务层 -->	
	<bean id="accountService" class="transactionManagement2.AccountServiceImpl">
		<property name="accountDao" ref="accountDao" />
	</bean>

<!-- 配置dao层 -->	
	<bean id="accountDao" class="transactionManagement2.AccountDaoImpl">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
<!-- 配置业务层代理 -->
	<bean id="accountServiceProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<!-- 配置目标对象 -->
		<property name="target" ref="accountService" />
		<!-- 注入事务管理器 -->
		<property name="transactionManager" ref="transactionManager" />
		<!-- 注入事务属性 -->
		<property name="transactionAttributes">
			<props>
				<!-- prop格式 
					* PROPAGATION ：事务的传播行为
					* ISOLATION	     ：事物的隔离级别
					* readOnly    ：只读 设置为只读的方法中执行修改操作会触发异常
					* -Exception  ：发生那些异常回滚事务 默认发生任何异常都会回滚事务
					* +Exception  ：发生那些异常不回滚事务 
					各属性以 , 分隔
				-->
		        <prop key="up">PROPAGATION_REQUIRED</prop>
		        <!-- <prop key="insert*">PROPAGATION_REQUIRED</prop>
		        <prop key="update*">PROPAGATION_REQUIRED</prop>
		        <prop key="*">PROPAGATION_REQUIRED,readOnly</prop> -->
	      	</props>
		</property>
	</bean>
</beans>